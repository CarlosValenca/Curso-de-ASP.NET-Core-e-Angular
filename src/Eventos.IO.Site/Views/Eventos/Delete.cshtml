@model Eventos.IO.Application.ViewModels.EventoViewModel

@{
    ViewData["Title"] = "Excluir Evento";
}

<h1>@ViewData["Title"]</h1>
<hr />

<!-- Aqui temos o arquivo de estilo para poder utilizar dentro do html dentro dos campos data -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css" />

<h3>Você tem certeza que deseja excluir este evento ?</h3>
<hr />

<div>
    <dl class="row">

        <vc:Summary />

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Nome)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Nome)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DescricaoCurta)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DescricaoCurta)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DescricaoLonga)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DescricaoLonga)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DataInicio)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DataInicio)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DataFim)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DataFim)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Gratuito)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Gratuito)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Valor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Valor)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Online)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Online)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NomeEmpresa)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NomeEmpresa)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Categoria)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Categoria.Id)
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Excluir" class="btn btn-danger" />
        <a asp-action="MeusEventos" class="btn btn-info">Voltar para a Lista</a>
    </form>
</div>

<!-- Executa tudo que tem que ser feito apenas após o carregamento completo da _Layout page -->
<!-- Temos o arquivo java script mais os arquivos para deixar o calendário em portugues br -->
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!-- Aqui temos os scripts para validações do datepicker -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/locales/bootstrap-datepicker.pt-BR.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/locales/bootstrap-datepicker.pt.min.js"></script>

    <script>
        ValidacoesEvento();
    </script>

    @{
        if (ViewBag.RetornoPost != null)
        {
            var notificacao = ViewBag.RetornoPost.ToString().Split(',');

            <script>
                toastr.options = {
                    "closeButton": false,
                    "debug": true,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": true,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr["@notificacao[0]"]("@notificacao[1]");
            </script>
        }
    }
}
